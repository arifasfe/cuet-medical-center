{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSE stuffs\\\\ML\\\\CUET Medical Center\\\\ui\\\\cuetmedicalui\\\\src\\\\Components\\\\Home.js\";\nimport React from 'react';\nimport { Card, CardBody, CardText } from 'reactstrap';\nimport variables from '../variables';\n\n// Function to fetch unverified students count\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchUnverifiedCount = () => {\n  return fetch(variables.API_URL + 'unverified/').then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(data => data.count) // assuming the response has a 'count' field\n  .catch(error => {\n    console.error('Error:', error);\n  });\n};\n\n// Function to fetch the currently available doctor\nconst fetchAvailableDoctor = () => {\n  const currentDayOfWeek = getCurrentDayOfWeek();\n  const currentTimeSlot = getCurrentTimeSlot();\n  return fetch(variables.API_URL + 'roster/').then(response => response.json()).then(data => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const currentDoctor = data.find(roster => roster.dayslot.day === currentDayOfWeek && roster.dayslot.slot === currentTimeSlot);\n    return currentDoctor ? currentDoctor.doctor : null;\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n};\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unverifiedCount: 0,\n      availableDoctor: null\n    };\n  }\n  componentDidMount() {\n    fetchUnverifiedCount().then(count => this.setState({\n      unverifiedCount: count\n    }));\n    fetchAvailableDoctor().then(doctor => this.setState({\n      availableDoctor: doctor\n    }));\n  }\n  render() {\n    const {\n      unverifiedCount,\n      availableDoctor\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Unverified Students: \", unverifiedCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Doctor On Duty: \", availableDoctor ? availableDoctor.name : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 8\n    }, this);\n  }\n}\nexport default Home;","map":{"version":3,"names":["React","Card","CardBody","CardText","variables","jsxDEV","_jsxDEV","fetchUnverifiedCount","fetch","API_URL","then","response","ok","Error","json","data","count","catch","error","console","fetchAvailableDoctor","currentDayOfWeek","getCurrentDayOfWeek","currentTimeSlot","getCurrentTimeSlot","currentDoctor","find","roster","dayslot","day","slot","doctor","Home","Component","constructor","props","state","unverifiedCount","availableDoctor","componentDidMount","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","name"],"sources":["E:/CSE stuffs/ML/CUET Medical Center/ui/cuetmedicalui/src/Components/Home.js"],"sourcesContent":["import React from 'react';\r\nimport { Card, CardBody, CardText } from 'reactstrap';\r\nimport variables from '../variables';\r\n\r\n// Function to fetch unverified students count\r\nconst fetchUnverifiedCount = () => {\r\n return fetch(variables.API_URL + 'unverified/')\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => data.count) // assuming the response has a 'count' field\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n};\r\n\r\n// Function to fetch the currently available doctor\r\nconst fetchAvailableDoctor = () => {\r\n const currentDayOfWeek = getCurrentDayOfWeek();\r\n const currentTimeSlot = getCurrentTimeSlot();\r\n\r\n return fetch(variables.API_URL + 'roster/')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const currentDoctor = data.find(roster => roster.dayslot.day === currentDayOfWeek && roster.dayslot.slot === currentTimeSlot);\r\n      return currentDoctor ? currentDoctor.doctor : null;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n};\r\n\r\nclass Home extends React.Component {\r\n constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      unverifiedCount: 0,\r\n      availableDoctor: null,\r\n    };\r\n }\r\n\r\n componentDidMount() {\r\n    fetchUnverifiedCount().then(count => this.setState({ unverifiedCount: count }));\r\n    fetchAvailableDoctor().then(doctor => this.setState({ availableDoctor: doctor }));\r\n }\r\n\r\n render() {\r\n    const { unverifiedCount, availableDoctor } = this.state;\r\n\r\n    return (\r\n       <div>\r\n         <Card>\r\n           <CardBody>\r\n             <CardText>\r\n               Unverified Students: {unverifiedCount}\r\n             </CardText>\r\n           </CardBody>\r\n         </Card>\r\n\r\n         <Card>\r\n           <CardBody>\r\n             <CardText>\r\n               Doctor On Duty: {availableDoctor ? availableDoctor.name : 'N/A'}\r\n             </CardText>\r\n           </CardBody>\r\n         </Card>\r\n       </div>\r\n    );\r\n }\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}