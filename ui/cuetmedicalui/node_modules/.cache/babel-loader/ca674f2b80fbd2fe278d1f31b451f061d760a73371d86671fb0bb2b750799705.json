{"ast":null,"code":"const handleSubmit = async event => {\n  event.preventDefault();\n  try {\n    const response = await fetch(`${variables.API_URL}login/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const user = await response.json();\n    if (user.is_staff && user.is_superuser && user.is_active && user.verified) {\n      navigate('/admin/home');\n    } else if (!user.is_staff && !user.is_superuser && user.is_active && user.verified) {\n      navigate('/student/home');\n    } else {\n      navigate('/student');\n    }\n  } catch (error) {\n    console.error(\"Failed to login: \", error);\n  }\n};","map":{"version":3,"names":["handleSubmit","event","preventDefault","response","fetch","variables","API_URL","method","headers","body","JSON","stringify","id","password","ok","Error","status","user","json","is_staff","is_superuser","is_active","verified","navigate","error","console"],"sources":["E:/CSE stuffs/ML/CUET Medical Center/ui/cuetmedicalui/src/Login.js"],"sourcesContent":["const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n       const response = await fetch(`${variables.API_URL}login/`, {\r\n         method: 'POST',\r\n         headers: {\r\n           'Content-Type': 'application/json'\r\n         },\r\n         body: JSON.stringify({ id, password })\r\n       });\r\n   \r\n       if (!response.ok) {\r\n         throw new Error(`HTTP error! status: ${response.status}`);\r\n       }\r\n   \r\n       const user = await response.json();\r\n       if (user.is_staff && user.is_superuser && user.is_active && user.verified) {\r\n         navigate('/admin/home');\r\n       } else if (!user.is_staff && !user.is_superuser && user.is_active && user.verified) {\r\n         navigate('/student/home');\r\n       } else {\r\n         navigate('/student');\r\n       }\r\n    } catch (error) {\r\n       console.error(\"Failed to login: \", error);\r\n    }\r\n   };\r\n   "],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,KAAK,IAAK;EAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;EACtB,IAAI;IACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,SAAS,CAACC,OAAQ,QAAO,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,EAAE;QAAEC;MAAS,CAAC;IACvC,CAAC,CAAC;IAEF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBZ,QAAQ,CAACa,MAAO,EAAC,CAAC;IAC3D;IAEA,MAAMC,IAAI,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,QAAQ,IAAIF,IAAI,CAACG,YAAY,IAAIH,IAAI,CAACI,SAAS,IAAIJ,IAAI,CAACK,QAAQ,EAAE;MACzEC,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,MAAM,IAAI,CAACN,IAAI,CAACE,QAAQ,IAAI,CAACF,IAAI,CAACG,YAAY,IAAIH,IAAI,CAACI,SAAS,IAAIJ,IAAI,CAACK,QAAQ,EAAE;MAClFC,QAAQ,CAAC,eAAe,CAAC;IAC3B,CAAC,MAAM;MACLA,QAAQ,CAAC,UAAU,CAAC;IACtB;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACbC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;EAC5C;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}