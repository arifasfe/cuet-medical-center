{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSE stuffs\\\\ML\\\\CUET Medical Center\\\\ui\\\\cuetmedicalui\\\\src\\\\Components\\\\Home.js\";\nimport React from 'react';\nimport { Card, CardBody, CardText } from 'reactstrap';\nimport { getCurrentDayOfWeek, getCurrentTimeSlot } from './Roster';\nimport variables from '../variables';\n\n// Function to fetch unverified students count\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchUnverifiedCount = () => {\n  return fetch(variables.API_URL + 'unverified/').then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(data => data.count) // assuming the response has a 'count' field\n  .catch(error => {\n    console.error('Error:', error);\n  });\n};\n\n// Function to fetch the currently available doctor\nconst fetchAvailableDoctor = () => {\n  const currentDayOfWeek = getCurrentDayOfWeek();\n  const currentTimeSlot = getCurrentTimeSlot();\n  return fetch(variables.API_URL + 'roster/').then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(roster => {\n    if (roster.dayslot && roster.dayslot.day === currentDayOfWeek && roster.dayslot.slot === currentTimeSlot) {\n      return roster.doctor;\n    } else {\n      return null;\n    }\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n};\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unverifiedCount: 0,\n      availableDoctor: null\n    };\n  }\n  componentDidMount() {\n    Promise.all([fetchUnverifiedCount(), fetchAvailableDoctor()]).then(([unverifiedCount, availableDoctor]) => {\n      this.setState({\n        unverifiedCount,\n        availableDoctor,\n        forceUpdate: !this.state.forceUpdate\n      }, () => {\n        console.log(\"Unverified Count: \", unverifiedCount);\n        console.log(\"Available Doctor: \", availableDoctor);\n      });\n    });\n  }\n  render() {\n    const {\n      unverifiedCount,\n      availableDoctor\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Unverified Students: \", unverifiedCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Doctor On Duty: \", availableDoctor ? availableDoctor.doctor_name : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Home;","map":{"version":3,"names":["React","Card","CardBody","CardText","getCurrentDayOfWeek","getCurrentTimeSlot","variables","jsxDEV","_jsxDEV","fetchUnverifiedCount","fetch","API_URL","then","response","ok","Error","json","data","count","catch","error","console","fetchAvailableDoctor","currentDayOfWeek","currentTimeSlot","roster","dayslot","day","slot","doctor","Home","Component","constructor","props","state","unverifiedCount","availableDoctor","componentDidMount","Promise","all","setState","forceUpdate","log","render","children","fileName","_jsxFileName","lineNumber","columnNumber","doctor_name"],"sources":["E:/CSE stuffs/ML/CUET Medical Center/ui/cuetmedicalui/src/Components/Home.js"],"sourcesContent":["import React from 'react';\r\nimport { Card, CardBody, CardText } from 'reactstrap';\r\nimport { getCurrentDayOfWeek, getCurrentTimeSlot } from './Roster';\r\nimport variables from '../variables';\r\n\r\n// Function to fetch unverified students count\r\nconst fetchUnverifiedCount = () => {\r\n return fetch(variables.API_URL + 'unverified/')\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => data.count) // assuming the response has a 'count' field\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n};\r\n\r\n// Function to fetch the currently available doctor\r\nconst fetchAvailableDoctor = () => {\r\n const currentDayOfWeek = getCurrentDayOfWeek();\r\n const currentTimeSlot = getCurrentTimeSlot();\r\n\r\n return fetch(variables.API_URL + 'roster/')\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(roster => {\r\n      if (roster.dayslot && roster.dayslot.day === currentDayOfWeek && roster.dayslot.slot === currentTimeSlot) {\r\n        return roster.doctor;\r\n      } else {\r\n        return null;\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n};\r\n\r\nclass Home extends React.Component {\r\n constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      unverifiedCount: 0,\r\n      availableDoctor: null,\r\n    };\r\n }\r\n\r\n componentDidMount() {\r\n    Promise.all([fetchUnverifiedCount(), fetchAvailableDoctor()])\r\n      .then(([unverifiedCount, availableDoctor]) => {\r\n        this.setState({ unverifiedCount, availableDoctor, forceUpdate: !this.state.forceUpdate }, () => {\r\n          console.log(\"Unverified Count: \", unverifiedCount);\r\n          console.log(\"Available Doctor: \", availableDoctor);\r\n        });\r\n      });\r\n}\r\n\r\n\r\n render() {\r\n    const { unverifiedCount, availableDoctor } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <CardBody>\r\n            <CardText>\r\n              Unverified Students: {unverifiedCount}\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardBody>\r\n            <CardText>\r\n              Doctor On Duty: {availableDoctor ? availableDoctor.doctor_name : 'N/A'}\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n }\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}